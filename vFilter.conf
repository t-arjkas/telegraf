# Telegraf Configuration
#
# Global tags can be specified here in key="value" format.
[global_tags]
  ## ARM Resource ID for which the metrics is being emitted
  # ResourceId = "/subscriptions/79003cad-e368-4304-acbf-3d3aa80978e3/resourceGroups/AVS-PC-Test/providers/Microsoft.AVS/privateClouds/test_cloud"

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "300s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  # round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 6

  ## Maximum number of unwritten metrics per output.
  metric_buffer_limit = 60

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  # collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "300s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  #flush_jitter = "5s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Log at debug level.
  # debug = false
  ## Log only error level messages.
  # quiet = false

  ## Log file name, the empty string means to log to stderr.
  # logfile = ""

  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.  Logs are rotated only when
  ## written to, if there is no log activity rotation may be delayed.
  # logfile_rotation_interval = "0d"

  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"

  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  # logfile_rotation_max_archives = 5

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = true


###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################

# BEGIN ---------------------------------------------------------------------

# Read metrics from VMware vCenter
 [[inputs.vsphere]]
 ## List of vCenter URLs to be monitored. These three lines must be uncommented
 ## and edited for the plugin to work.
 vcenters = [ "https://10.30.0.2/sdk" ]
 username = "cloudadmin@vmcp.local"
 password = "vCenter!23456"

 tagexclude = ["source", "vcenter", "moid", "dcname", "cpu", "dsname", "clustername", "disk"]
 #fielddrop = ["effectivecpu_average"]
 #namedrop = ["vsphere_cluster_mem"]

 vm_instances = false ## true by default

 host_metric_exclude = [ "*" ]

 ## Clusters
 cluster_instances = true
 cluster_metric_exclude = [
		"vmop.numShutdownGuest.latest",
		"vmop.numPoweroff.latest",
		"vmop.numSuspend.latest",
		"vmop.numReset.latest",
		"vmop.numRebootGuest.latest",
		"vmop.numStandbyGuest.latest",
		"vmop.numPoweron.latest",
		"vmop.numCreate.latest",
		"vmop.numDestroy.latest",
		"vmop.numRegister.latest",
		"vmop.numUnregister.latest",
		"vmop.numReconfigure.latest",
		"vmop.numClone.latest",
		"vmop.numDeploy.latest",
		"vmop.numChangeHost.latest",
		"vmop.numChangeDS.latest",
		"vmop.numChangeHostDS.latest",
		"vmop.numVMotion.latest",
		"vmop.numSVMotion.latest",
		"vmop.numXVMotion.latest",
	]
 
 datastore_instances = true
 datastore_metric_include = [
		"disk.used.latest",
		"disk.capacity.latest",
 ]
 
 datacenter_metric_exclude = [ "*" ]
 
 insecure_skip_verify = true
 force_discover_on_init = true

[[processors.multiplier]]
  order = 1
  Config = [
    "vsphere_datastore_disk used_latest=1024,capacity_latest=1024",
    "vsphere_cluster_mem totalmb_average=1048576,overhead_average=1024",
    "vsphere_cluster_clusterServices effectivemem_average=1048576"
  ]
  VerboseMode = false

 [[processors.rename]]
   order = 2
   [[processors.rename.replace]]
     measurement = "vsphere_datastore_disk"
     dest = "Vsphere.Datastore.Disk"

   [[processors.rename.replace]]
     measurement = "vsphere_cluster_clusterServices"
     dest = "Vsphere.Cluster.ClusterServices"

   [[processors.rename.replace]]
     measurement = "vsphere_cluster_cpu"
     dest = "Vsphere.Cluster.Cpu"

   [[processors.rename.replace]]
     measurement = "vsphere_cluster_mem"
     dest = "Vsphere.Cluster.Mem"

   [[processors.rename.replace]]
     field = "used_latest"
     dest = "UsedLatest"

   [[processors.rename.replace]]
     field = "used_latest"
     dest = "UsedLatest"

   [[processors.rename.replace]]
     field = "capacity_latest"
     dest = "CapacityLatest"

   [[processors.rename.replace]]
     field = "totalmb_average"
     dest = "TotalMbAverage"

   [[processors.rename.replace]]
     field = "overhead_average"
     dest = "OverheadAverage"

   [[processors.rename.replace]]
     field = "usage_average"
     dest = "UsageAverage"

   [[processors.rename.replace]]
     field = "effectivemem_average"
     dest = "EffectiveMemAverage"

   [[processors.rename.replace]]
     field = "effectivecpu_average"
     dest = "EffectiveCpuAverage"

   [[processors.rename.replace]]
     field = "totalmhz_average"
     dest = "TotalMhzAverage"

   [[processors.rename.replace]]
     field = "failover_latest"
     dest = "FailoverLatest"

 [[outputs.socket_writer]]
   address = "unix:///var/etw/mdm_influxdb.socket"
   data_format = "influx"
   namedrop = ["Vsphere.Cluster.Cpu"]

 [[outputs.file]]
   files = ["stdout"]
   data_format = "influx"
   namedrop = ["Vsphere.Cluster.Cpu"]
